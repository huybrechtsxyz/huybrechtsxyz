# Configure docker swarm cluster
name: _ConfigureSwarmTask

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      BITWARDEN_TOKEN:
        required: true

jobs:
  download:
    name: Download Terraform Output
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    outputs:
      matrix: ${{ steps.parse.outputs.matrix }}
    steps:
      # Download Terraform Output
      - name: Download Terraform Output
        uses: actions/download-artifact@v4
        with:
          name: terraform-${{ inputs.environment }}-output
          path: ./tmp
      
      # Check if the artifact exists
      - name: Check if tf_output.json exists
        run: |
          if [ ! -f ./tmp/tf_output.json ]; then
            echo "❌ Artifact terraform-${{ inputs.environment }}-output not found or tf_output.json missing. Exiting."
            exit 1
          fi

      # Parse Terraform Output to find Swarm Servers
      - name: Parse Swarm Servers
        id: parse
        run: |
          matrix=$(jq -c '[.include[] | select(.role == "manager") | {ip, name, role}]' ./tmp/tf_output.json)
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  configure:
    name: Configure Swarm Managers
    needs: [ download ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.download.outputs.matrix) }}
    steps:
      - name: Deploy to server
        run: |
          echo "Deploying to IP: ${{ matrix.ip }}, Name: ${{ matrix.label }}"
