# This reusable workflow will deploy or update the docker stock for its environment

name: Reusable - Deploy Docker Stack

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      APP_HOST_SERVER:
        required: true
      APP_HOST_USERNAME:
        required: true
      APP_HOST_PASSWORD:
        required: true
      APP_HOST_PORT:
        required: true
      APP_HOST_EMAIL:
        required: true
      APP_DBASE_NAME:
        required: true

jobs:
  deploy-stack:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Update docker stack
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.APP_HOST_SERVER }}
          username: ${{ secrets.APP_HOST_USERNAME }}
          password: ${{ secrets.APP_HOST_PASSWORD }}
          port: ${{ secrets.APP_HOST_PORT }}
          script: |
            cd /;
            cd /app;
            if [ -f compose.${{ inputs.environment }}.yml ]; then
              mv compose.${{ inputs.environment }}.yml compose.yml;
            fi
            docker network inspect traefik --format {{.Id}} 2>/dev/null \
              || docker network create --driver overlay traefik;
            if [ docker secret inspect ${{ secrets.APP_HOST_USERNAME }} 2>/dev/null ]; then \
              docker secret rm ${{ secrets.APP_HOST_USERNAME }};
            fi;
            echo ${{ secrets.APP_HOST_USERNAME }} | docker secret create app_host_username -;
            if [ docker secret inspect ${{ secrets.APP_HOST_EMAIL }} 2>/dev/null ]; then \
              docker secret rm ${{ secrets.APP_HOST_EMAIL }};
            fi;
            echo ${{ secrets.APP_HOST_EMAIL }} | docker secret create app_host_email -;
            if [ docker secret inspect ${{ secrets.APP_HOST_PASSWORD }} 2>/dev/null ]; then \
              docker secret rm ${{ secrets.APP_HOST_PASSWORD }};
            fi;
            echo ${{ secrets.APP_HOST_PASSWORD }} | docker secret create app_host_password -;
            if [ docker secret inspect ${{ secrets.APP_DBASE_NAME }} 2>/dev/null ]; then \
              docker secret rm ${{ secrets.APP_DBASE_NAME }};
            fi;
            echo ${{ secrets.APP_DBASE_NAME }} | docker secret create app_dbase_name -;
            docker stack deploy -c <(docker-compose -f compose.yml config) app;