# This reusable workflow will deploy or update the docker stock for its environment

name: Reusable - Deploy Docker Stack

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      APP_HOST_SERVER:
        required: true
      APP_HOST_USERNAME:
        required: true
      APP_HOST_PASSWORD:
        required: true
      APP_HOST_PORT:
        required: true
      APP_HOST_EMAIL:
        required: true
      APP_DATA_PROVIDER:
        required: true
      APP_DATA_URL:
        required: true
      APP_DATA_NAME:
        required: true
      APP_DATA_USERNAME:
        required: true
      APP_DATA_PASSWORD:
        required: true

jobs:
  deploy-stack:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Update docker stack
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.APP_HOST_SERVER }}
          username: ${{ secrets.APP_HOST_USERNAME }}
          password: ${{ secrets.APP_HOST_PASSWORD }}
          port: ${{ secrets.APP_HOST_PORT }}
          script: |
            cd /;
            cd /app;
            if [ -f compose.${{ inputs.environment }}.yml ]; then
              mv compose.${{ inputs.environment }}.yml compose.yml;
            fi
            docker network inspect traefik --format {{.Id}} 2>/dev/null \
              || docker network create --driver overlay traefik;
            docker secret rm app_host_username &> /dev/null;
            echo ${{ secrets.APP_HOST_USERNAME }} | docker secret create app_host_username - &> /dev/null;
            docker secret rm app_host_email &> /dev/null;
            echo ${{ secrets.APP_HOST_EMAIL }} | docker secret create app_host_email - &> /dev/null;
            docker secret rm app_host_password &> /dev/null;
            echo ${{ secrets.APP_HOST_PASSWORD }} | docker secret create app_host_password - &> /dev/null;
            docker secret rm app_data_provider &> /dev/null;
            echo ${{ secrets.APP_DATA_PROVIDER }} | docker secret create app_data_provider -;
            docker secret rm app_data_url &> /dev/null;
            echo ${{ secrets.APP_DATA_URL }} | docker secret create app_data_url; -;
            docker secret rm app_data_name &> /dev/null;
            echo ${{ secrets.APP_DATA_NAME }} | docker secret create app_data_name -;
            docker secret rm app_data_username &> /dev/null;
            echo ${{ secrets.APP_DATA_USERNAME }} | docker secret create app_data_username -;
            docker secret rm app_data_password &> /dev/null;
            echo ${{ secrets.APP_DATA_PASSWORD }} | docker secret create app_data_password -;
            docker stack deploy -c <(docker-compose -f compose.yml config) app &> /dev/null;