version: '3.9'

# secrets:
# configs:
# volumes:

networks:
  lan-develop:
    external: true
  lan-platform:
    external: true

services:

  seaweed-master:
    image: chrislusf/seaweedfs
    volumes:
      - ${APP_PATH}/seaweed/master:/var/lib/seaweedfs/master
    networks:
      - lan-${WORKSPACE}
    command: "-v=1 master -volumeSizeLimitMB 100 -resumeState=false -ip=seaweed-master -ip.bind=0.0.0.0 -port=9333 -mdir=/var/lib/seaweedfs/master -metricsPort=9324"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9333/cluster/status"]
      interval: 60s
      timeout: 15s
      retries: 5
      start_period: 120s
    deploy:
      mode: global
      placement:
        constraints:
          - node.role==manager
          - node.labels.manager==true
      restart_policy:
        condition: on-failure
        delay: 10s
      update_config:
        parallelism: 1
        delay: 15s
        failure_action: rollback
        monitor: 30s
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
        failure_action: continue
        monitor: 30s
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.seaweed-master.rule=Host(`seaweed.${DOMAIN_DEV}`)"
        - "traefik.http.routers.seaweed-master.entrypoints=websecure"
        - "traefik.http.routers.seaweed-master.tls.certresolver=myresolver"
        - "traefik.http.services.seaweed-master.loadbalancer.server.port=9333"

  seaweed-volume-1:
    image: chrislusf/seaweedfs
    volumes:
      - ${APP_PATH}/seaweed/volume-1:/var/lib/seaweedfs/volume1
    networks:
      - lan-${WORKSPACE}
    environment:
      DATACENTER: ${DATACENTER}
    command: 'volume -dataCenter=$DATACENTER -rack=v1 -mserver="seaweed-master:9333" -port=8081 -preStopSeconds=1 -dir=/var/lib/seaweedfs/volume1 -metricsPort=9325'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/status"]
      interval: 60s
      timeout: 15s
      retries: 5
      start_period: 120s
    deploy:
      mode: global
      placement:
        constraints:
          - node.role==${DOCKER_WORKER}
          - node.labels.server==infra-1
      restart_policy:
        condition: on-failure
        delay: 10s
      update_config:
        parallelism: 1
        delay: 15s
        failure_action: rollback
        monitor: 30s
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
        failure_action: continue
        monitor: 30s

  seaweed-volume-2:
    image: chrislusf/seaweedfs
    volumes:
      - ${APP_PATH}/seaweed/volume-2:/var/lib/seaweedfs/volume2
    networks:
      - lan-${WORKSPACE}
    environment:
      DATACENTER: ${DATACENTER}
    command: 'volume -dataCenter=$DATACENTER -rack=v2 -mserver="seaweed-master:9333" -port=8081 -preStopSeconds=1 -dir=/var/lib/seaweedfs/volume2 -metricsPort=9325'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/status"]
      interval: 60s
      timeout: 15s
      retries: 5
      start_period: 120s
    deploy:
      mode: global
      placement:
        constraints:
          - node.role==${DOCKER_WORKER}
          - node.labels.server==infra-2
      restart_policy:
        condition: on-failure
        delay: 10s
      update_config:
        parallelism: 1
        delay: 15s
        failure_action: rollback
        monitor: 30s
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
        failure_action: continue
        monitor: 30s

  seaweed-filer:
    image: chrislusf/seaweedfs
    volumes:
      - ${APP_PATH}/seaweed/filer:/data
    networks:
      - lan-${WORKSPACE}
    command: 'filer -defaultReplicaPlacement=100 -iam -master="seaweed-master:9333" -metricsPort=9326'
    tty: true
    stdin_open: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888"]
      interval: 60s
      timeout: 15s
      retries: 5
      start_period: 120s
    deploy:
      mode: global
      placement:
        constraints:
          - node.role==${DOCKER_WORKER}
          - node.labels.infra==true
      restart_policy:
        condition: on-failure
        delay: 10s
      update_config:
        parallelism: 1
        delay: 15s
        failure_action: rollback
        monitor: 30s
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
        failure_action: continue
        monitor: 30s
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.seaweed-filer.rule=Host(`filer.${DOMAIN_DEV}`)"
        - "traefik.http.routers.seaweed-filer.entrypoints=websecure"
        - "traefik.http.routers.seaweed-filer.tls.certresolver=myresolver"
        - "traefik.http.services.seaweed-filer.loadbalancer.server.port=8888"
      
  seaweed-s3:
    image: chrislusf/seaweedfs
    networks:
      - lan-${WORKSPACE}
    command: '-v=9 s3 -filer="seaweed-filer:8888" -ip.bind=0.0.0.0 -metricsPort=9327'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8333"]
      interval: 60s
      timeout: 15s
      retries: 5
      start_period: 120s
    deploy:
      mode: global
      placement:
        constraints:
          - node.role==${DOCKER_WORKER}
          - node.labels.infra==true
      restart_policy:
        condition: on-failure
        delay: 10s
      update_config:
        parallelism: 1
        delay: 15s
        failure_action: rollback
        monitor: 30s
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
        failure_action: continue
        monitor: 30s
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.seaweed-s3.rule=Host(`s3.${DOMAIN_DEV}`)"
        - "traefik.http.routers.seaweed-s3.entrypoints=websecure"
        - "traefik.http.routers.seaweed-s3.tls.certresolver=myresolver"
        - "traefik.http.services.seaweed-s3.loadbalancer.server.port=8333"

  seaweed-webdav:
    image: chrislusf/seaweedfs
    networks:
      - lan-${WORKSPACE}
    command: 'webdav -filer="seaweed-filer:8888"'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7333"]
      interval: 60s
      timeout: 15s
      retries: 5
      start_period: 120s
    deploy:
      mode: global
      placement:
        constraints:
          - node.role==${DOCKER_WORKER}
          - node.labels.infra==true
      restart_policy:
        condition: on-failure
        delay: 10s
      update_config:
        parallelism: 1
        delay: 15s
        failure_action: rollback
        monitor: 30s
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
        failure_action: continue
        monitor: 30s
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.seaweed-webdav.rule=Host(`webdav.${DOMAIN_DEV}`)"
        - "traefik.http.routers.seaweed-webdav.entrypoints=websecure"
        - "traefik.http.routers.seaweed-webdav.tls.certresolver=myresolver"
        - "traefik.http.services.seaweed-webdav.loadbalancer.server.port=7333"
      