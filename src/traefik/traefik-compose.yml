version: '3.9'

services:
  traefik:
    image: traefik:v2.10
    command:
      # Enable the Traefik log, for configurations and errors
      - --log
      - --log.level=DEBUG
      - --log.filePath=/logs/traefik.log
      - --global.sendAnonymousUsage=false
      # Enable the access log, with HTTP requests
      - --accesslog
      - --accesslog.filepath=/app/logs/traefik-access.log
      # Add a constraint to only use services with the label "traefik.constraint-label=traefik-public"      
      - --providers.docker.constraints=Label(`traefik.constraint-label`, `traefik-${APP_ENVIRONMENT}`)
      # Do not expose all Docker services, only the ones explicitly exposed
      # - --entrypoints.smtp.address=:25
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      # - --entrypoints.smtptls.address=:587
      # - --entrypoints.https5000.address=:5000
      # - --entrypoints.grpc.address=:8181
      # Enable Docker Swarm mode
      - --providers.docker
      - --providers.docker.swarmmode
      - --providers.docker.exposedbydefault=false
      # Store the Let's Encrypt certificates in the mounted volume
      - --certificatesresolvers.le.acme.httpchallenge=true
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=http
      - --certificatesresolvers.le.acme.caserver=${APP_CASERVER}
      - --certificatesresolvers.le.acme.email=webmaster@huybrechts.xyz
      - --certificatesresolvers.le.acme.storage=/certificates/acme.json
      # Enable the Dashboard and API
      - --api
      # Allow to communicate with backend containers running https. https://stackoverflow.com/questions/49412376/internal-server-error-with-traefik-https-backend-on-port-443
      - --serverstransport.insecureskipverify=true
    networks:
      - internet
      - default
    ports:
      - "${APP_HTTP}:${APP_HTTP}"
      - "${APP_HTTPS}:${APP_HTTPS}"
    deploy:
      placement:
        constraints:
          # Make the traefik service run only on the manager node,
          # as the node with it has the volume for the certificates
          - node.role == manager
    volumes:
      # Add Docker as a mounted volume, so that Traefik can read the labels of other services
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Mount the volume to store the certificates
      - certdata:/certificates
      - logdata:/logs
    labels:
      - traefik.enable=true
      - traefik.docker.network=-internet
      - traefik.constraint-label=traefik-public
      # Middlewares can be re-used by other stacks in other Docker Compose files - users=${USERNAME}:${PASSWORD}
      # - traefik.http.routers.http_catchall.rule=HostRegexp(`{any:.+}`)
      # - traefik.http.routers.http_catchall.entrypoints=http
      # - traefik.http.routers.http_catchall.middlewares=https_redirect
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      - traefik.http.middlewares.admin-auth.basicauth.users=root:$$apr1$$QWdnNA46$$ERyQkE85h.jRxDlkEFTcU."
      # Use the special Traefik service api@internal with the web UI/Dashboard
      # traefik.http.routers.dashboard-https.rule=Host(`${APP_BASEURL}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
      - traefik.http.routers.traefik-dashboard-http.rule=Host(`${APP_BASEURL?Variable not set}`)
      - traefik.http.routers.traefik-dashboard-http.entrypoints=http
      - traefik.http.routers.traefik-dashboard-http.middlewares=https-redirect
      - traefik.http.routers.traefik-dashboard-https.rule=Host(`${APP_BASEURL?Variable not set}`)
      - traefik.http.routers.traefik-dashboard-https.entrypoints=https
      - traefik.http.routers.traefik-dashboard-https.tls=true
      - traefik.http.routers.traefik-dashboard-https.tls.certresolver=le
      - traefik.http.routers.traefik-dashboard-https.service=api@internal
      - traefik.http.routers.traefik-dashboard-https.middlewares=admin-auth
      - traefik.http.services.traefik-dashboard-https.loadbalancer.server.port=8080
      # SSLHEADER
      # - "traefik.http.middlewares.sslheader.headers.accessControlAllowMethods=GET,OPTIONS,PUT"
      # - "traefik.http.middlewares.sslheader.headers.accessControlAllowOriginList=https://${APP_BASEURL}"
      # - "traefik.http.middlewares.sslheader.headers.accessControlMaxAge=100"
      # - "traefik.http.middlewares.sslheader.headers.addVaryHeader=true"
      # - "traefik.http.middlewares.sslheader.headers.browserXssFilter=true"
      # - "traefik.http.middlewares.sslheader.headers.contentTypeNosniff=true"
      # - "traefik.http.middlewares.sslheader.headers.customFrameOptionsValue=SAMEORIGIN"
      # - "traefik.http.middlewares.sslheader.headers.forceSTSHeader=true"
      # - "traefik.http.middlewares.sslheader.headers.featurePolicy=vibrate 'self'"
      # - "traefik.http.middlewares.sslheader.headers.frameDeny=true"
      # - "traefik.http.middlewares.sslheader.headers.referrerPolicy=no-referrer, strict-origin-when-cross-origin"
      # - "traefik.http.middlewares.sslheader.headers.sslredirect=true"
      # - "traefik.http.middlewares.sslheader.headers.stsSeconds=31536000"
      # - "traefik.http.middlewares.sslheader.headers.stsIncludeSubdomains=true"
      # - "traefik.http.middlewares.sslheader.headers.stsPreload=true"
      # - "traefik.http.middlewares.sslheader.headers.customResponseHeaders.x-powered-by=Foobar/1.1.1"
      # - "traefik.http.middlewares.sslheader.headers.customResponseHeaders.set-cookie='max-age=2592000; Path=/; Secure; HttpOnly; SameSite=Strict;'"
      # - "traefik.http.middlewares.sslheader.headers.contentSecurityPolicy=\
      #     default-src 'none';\
      #     base-uri 'self';\
      #     font-src 'self' https://fonts.googleapis.com https://fonts.gstatic.com;\
      #     form-action 'self' https://accounts.google.com;\
      #     frame-ancestors 'none';\
      #     frame-src 'self' https://www.google.com https://notfound-static.fwebservices.be/;\
      #     img-src 'self' https://*.googleusercontent.com data:;\
      #     object-src 'none';\
      #     script-src-elem 'self' *.google.com https://www.gstatic.com;\
      #     style-src 'self' *.googleapis.com;"