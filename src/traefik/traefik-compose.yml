version: '3.9'

networks:
  internet:

services:
  traefik:
    image: "traefik:v2.10"
    deploy:
      placement:
        constraints:
          - node.labels.traefik-public.traefik-certificates == true
    command:
      # FEATURES
      - "--log=true"
      - "--log.level=DEBUG"
      - "--log.filePath=/app/logs/traefik.log"
      - "--accesslog=true"
      - "--accesslog.filepath=/app/logs/traefik-access.log"
      - "--global.sendAnonymousUsage=false"
      - "--api.dashboard=true"
      # PROVIDERS
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.constraints=Label(`traefik.constraint-label`, `traefik-${APP_ENVIRONMENT}`)"
      - "--providers.docker.exposedbydefault=false"
      # ENTRYPOINTS
      - "--entryPoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # TSL
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.caserver=${APP_CASERVER}"
      - "--certificatesresolvers.letsencrypt.acme.email=webmaster@huybrechts.xyz"
      - "--certificatesresolvers.letsencrypt.acme.storage=/app/cert/acme.json"
    networks:
      - "internet"
    ports:
      - target: ${APP_HTTP}
        published: ${APP_HTTP}
        mode: host
      - target: ${APP_HTTPS}
        published: ${APP_HTTPS}
        mode: host
    volumes:
      - "appdata:/app"
      - "/var/run/docker.sock:/var/run/docker.sock"
    labels:
      # BASIC
      - "traefik.enable=true"
      - "traefik.constraint-label=traefik-${APP_ENVIRONMENT}"
      # REDIRECT
      - "traefik.http.routers.http_catchall.rule=HostRegexp(`{any:.+}`)"
      - "traefik.http.routers.http_catchall.entrypoints=web"
      - "traefik.http.routers.http_catchall.middlewares=https_redirect"
      - "traefik.http.middlewares.https_redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https_redirect.redirectscheme.permanent=true"
      # DASHBOARD
      - "traefik.http.routers.traefik.rule=Host(`${APP_BASEURL}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.middlewares=auth"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.tls.domains[0].main=${APP_BASEURL}"      
      - "traefik.http.middlewares.auth.basicauth.users=root:$$apr1$$QWdnNA46$$ERyQkE85h.jRxDlkEFTcU."
      # # SSLHEADER
      # - "traefik.http.middlewares.sslheader.headers.accessControlAllowMethods=GET,OPTIONS,PUT"
      # - "traefik.http.middlewares.sslheader.headers.accessControlAllowOriginList=https://${APP_BASEURL}"
      # - "traefik.http.middlewares.sslheader.headers.accessControlMaxAge=100"
      # - "traefik.http.middlewares.sslheader.headers.addVaryHeader=true"
      # - "traefik.http.middlewares.sslheader.headers.browserXssFilter=true"
      # - "traefik.http.middlewares.sslheader.headers.contentTypeNosniff=true"
      # - "traefik.http.middlewares.sslheader.headers.customFrameOptionsValue=SAMEORIGIN"
      # - "traefik.http.middlewares.sslheader.headers.forceSTSHeader=true"
      # - "traefik.http.middlewares.sslheader.headers.featurePolicy=vibrate 'self'"
      # - "traefik.http.middlewares.sslheader.headers.frameDeny=true"
      # - "traefik.http.middlewares.sslheader.headers.referrerPolicy=no-referrer, strict-origin-when-cross-origin"
      # - "traefik.http.middlewares.sslheader.headers.sslredirect=true"
      # - "traefik.http.middlewares.sslheader.headers.stsSeconds=31536000"
      # - "traefik.http.middlewares.sslheader.headers.stsIncludeSubdomains=true"
      # - "traefik.http.middlewares.sslheader.headers.stsPreload=true"
      # - "traefik.http.middlewares.sslheader.headers.customResponseHeaders.x-powered-by=Foobar/1.1.1"
      # - "traefik.http.middlewares.sslheader.headers.customResponseHeaders.set-cookie='max-age=2592000; Path=/; Secure; HttpOnly; SameSite=Strict;'"
      # - "traefik.http.middlewares.sslheader.headers.contentSecurityPolicy=\
      #     default-src 'none';\
      #     base-uri 'self';\
      #     font-src 'self' https://fonts.googleapis.com https://fonts.gstatic.com;\
      #     form-action 'self' https://accounts.google.com;\
      #     frame-ancestors 'none';\
      #     frame-src 'self' https://www.google.com https://notfound-static.fwebservices.be/;\
      #     img-src 'self' https://*.googleusercontent.com data:;\
      #     object-src 'none';\
      #     script-src-elem 'self' *.google.com https://www.gstatic.com;\
      #     style-src 'self' *.googleapis.com;"

  whoami:
    image: traefik/whoami:v1.10
    labels:
        - "traefik.enable=true"
        - "traefik.constraint-label=traefik-${APP_ENVIRONMENT}"
        - "traefik.http.routers.whoami.rule=Host(`${APP_BASEURL} && PathPrefix(`/whoami`)`)"
        - "traefik.http.routers.whoami.loadbalancer.server.port=80"
        - "traefik.http.routers.whoami.middlewares=auth"
        - "traefik.http.routers.whoami.entrypoints=websecure"
        - "traefik.http.routers.whoami.tls=true"
        - "traefik.http.routers.whoami.tls.certresolver=letsencrypt"