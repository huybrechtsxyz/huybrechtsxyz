# version: '3.9'

#secrets:
# configs:
# volumes:

networks:
  lan-develop:
    external: true
  lan-platform:
    external: true

services:

  oauth2-traefik:
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.9.0
    networks:
      - lan-${WORKSPACE}
    secrets:
      - OAUTH2_TRAEFIK_SECRET
    environment:
      - OAUTH2_TRAEFIK_SECRET=/run/secrets/OAUTH2_TRAEFIK_SECRET
      - OAUTH2_TRAEFIK_COOKIE=${OAUTH2_TRAEFIK_COOKIE}
    command:
      - --http-address=0.0.0.0:4180
      - --reverse-proxy=true
      - --provider=keycloak-oidc
      - --email-domain=*
      - --client-id=traefik-client
      - --client-secret-file=${OAUTH2_TRAEFIK_SECRET}
      - --cookie-secret=${OAUTH2_TRAEFIK_COOKIE}
      - --redirect-url=https://traefik.${DOMAIN_DEV}/oauth2/callback
      - --oidc-issuer-url=https://identity.${DOMAIN_DEV}/realms/${REALM_ID}
      - --scope=openid email profile
      - --allowed-role=system-admin
      - --set-authorization-header=true
      - --set-xauthrequest=true
      - --show-debug-on-error=true
      - --code-challenge-method=S256
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role==${DOCKER_WORKER}
          - node.labels.infra==true
        preferences:
          - spread: node.id
      restart_policy:
        condition: on-failure
        delay: 10s
      update_config:
        parallelism: 1
        delay: 15s
        failure_action: rollback
        monitor: 30s
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
        failure_action: continue
        monitor: 30s
      labels:
        - traefik.enable=true
        # OAuth2 Forward Auth middleware
        - traefik.http.middlewares.oauth-auth.forwardAuth.address=http://oauth2-traefik:4180/oauth2/auth
        - traefik.http.middlewares.oauth-auth.forwardAuth.trustForwardHeader=true
        # OAuth2 Error handling middleware
        - traefik.http.middlewares.oauth-errors.errors.status=401,403
        - traefik.http.middlewares.oauth-errors.errors.service=oauth
        - traefik.http.middlewares.oauth-errors.errors.query=/oauth2/sign_in?rd={url}
        # OAuth2 Service and Router
        - traefik.http.services.oauth.loadbalancer.server.scheme=http
        - traefik.http.services.oauth.loadbalancer.server.port=4180
        - traefik.http.routers.oauth.rule=Host(`traefik.${DOMAIN_DEV}`) && PathPrefix(`/oauth2/`)
        - traefik.http.routers.oauth.priority=100
        - traefik.http.routers.oauth.service=oauth
        - traefik.http.routers.oauth.entrypoints=websecure
        - traefik.http.routers.oauth.tls.certresolver=${TRAEFIK_TLS_HTTP}
