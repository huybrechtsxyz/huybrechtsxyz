# version: '3.9'

secrets:
  OAUTH2_CLIENTID:
    external: true
  OAUTH2_SECRET:
    external: true
  OAUTH2_COOKIE:
    external: true

# configs:
# volumes:

networks:
  lan-develop:
    external: true
  lan-platform:
    external: true
  wan-develop:
    external: true
  wan-platform:
    external: true

x-oauth2-base: &oauth2-base
  image: quay.io/oauth2-proxy/oauth2-proxy:v7.6.0-alpine
  volumes:
    - ${OAUTH2_PATH_CONFIG}/config.template.cfg:/etc/config.template.cfg
    - ${OAUTH2_PATH_CONFIG}/libutils.sh:/etc/libutils.sh:ro
    - ${OAUTH2_PATH_CONFIG}/entrypoint.sh:/etc/entrypoint.sh:ro
  networks:
    - lan-${WORKSPACE}
    - wan-${WORKSPACE}
  secrets:
    - OAUTH2_CLIENTID
    - OAUTH2_SECRET
    - OAUTH2_COOKIE
  environment: &oauth2-base-environment
    OIDC_ISSUER_URL: https://identity.${DOMAIN_DEV}/realms/${REALM_ID}
    # These files are the same across all, unless you create separate secrets per domain
    OAUTH2_CLIENTID_FILE: /run/secrets/OAUTH2_CLIENTID
    OAUTH2_SECRET_FILE: /run/secrets/OAUTH2_SECRET
    OAUTH2_COOKIE_FILE: /run/secrets/OAUTH2_COOKIE
    REALM_ID: ${REALM_ID}
  entrypoint: ["/bin/sh", "/etc/entrypoint.sh"]
  healthcheck:
    test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4180/ping"]
    interval: 60s
    timeout: 15s
    retries: 10
    start_period: 120s
  deploy: &oauth2-base-deploy
    mode: replicated
    replicas: 1
    placement:
      constraints:
        - node.role==${DOCKER_WORKER}
        - node.labels.infra==true
    restart_policy:
      condition: on-failure
      delay: 10s
    update_config:
      parallelism: 1
      delay: 15s
      failure_action: rollback
      monitor: 30s
      order: start-first
    rollback_config:
      parallelism: 1
      delay: 10s
      failure_action: continue
      monitor: 30s

services:
  oauth2-admin:
    <<: *oauth2-base
    environment:
      <<: *oauth2-base-environment
      COOKIE_DOMAIN: .${DOMAIN_DEV}
      REDIRECT_HOST: auth.${DOMAIN_DEV}
      WHITELIST_DOMAIN: .${DOMAIN_DEV}
    deploy:
      <<: *oauth2-base-deploy
      labels:
        - traefik.enable=true
        - traefik.http.middlewares.oauth2-admin-headers.headers.customrequestheaders.Host=auth.${DOMAIN_DEV}
        - traefik.http.services.oauth2-admin.loadbalancer.server.scheme=http
        - traefik.http.services.oauth2-admin.loadbalancer.server.port=4180
        - traefik.http.routers.oauth2-admin.rule=Host(`auth.${DOMAIN_DEV}`)
        - traefik.http.routers.oauth2-admin.entrypoints=websecure
        - traefik.http.routers.oauth2-admin.tls.certresolver=${TRAEFIK_TLS_HTTP}
        - traefik.http.routers.oauth2-admin.middlewares=oauth2-admin-headers
