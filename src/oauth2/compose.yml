# version: '3.9'

# secrets:
# configs:
# volumes:

networks:
  lan-develop:
    external: true
  lan-platform:
    external: true

services:

  oauth2-traefik:
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.9.0
    networks:
      - lan-${WORKSPACE}
    command:
      - --reverse-proxy
      - --provider=keycloak-oidc
      - --client-id=traefik-client
      - --client-secret=yY6zhCIDlNMqlRkO7P4CIJh4bRypqboR
      - --redirect-url=https://traefik.${DOMAIN_DEV}/oauth2/callback
      - --oidc-issuer-url=https://identity.${DOMAIN_DEV}/realms/${REALM_ID}
      - --email-domain=.${DOMAIN_DEV}
      - --allowed-group=/sysadmins
      - --code-challenge-method=S256
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4180/ping"]
      interval: 60s
      timeout: 15s
      retries: 5
      start_period: 120s
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role==${DOCKER_WORKER}
          - node.labels.infra==true
        preferences:
          - spread: node.id
      restart_policy:
        condition: on-failure
        delay: 10s
      update_config:
        parallelism: 1
        delay: 15s
        failure_action: rollback
        monitor: 30s
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
        failure_action: continue
        monitor: 30s
      labels:
        - traefik.enable=true
        # Security headers middleware
        - traefik.http.middlewares.auth-dev-headers.headers.sslRedirect=true
        - traefik.http.middlewares.auth-dev-headers.headers.stsSeconds=315360000
        - traefik.http.middlewares.auth-dev-headers.headers.browserXssFilter=true
        - traefik.http.middlewares.auth-dev-headers.headers.contentTypeNosniff=true
        - traefik.http.middlewares.auth-dev-headers.headers.forceSTSHeader=true
        - traefik.http.middlewares.auth-dev-headers.headers.sslHost=${DOMAIN_DEV}
        - traefik.http.middlewares.auth-dev-headers.headers.stsIncludeSubdomains=true
        - traefik.http.middlewares.auth-dev-headers.headers.stsPreload=true
        - traefik.http.middlewares.auth-dev-headers.headers.frameDeny=true
        # OAuth2 Proxy middleware
        - traefik.http.middlewares.oauth-auth.forwardAuth.address=http://auth.${DOMAIN_DEV}/oauth2/auth
        - traefik.http.middlewares.oauth-auth.forwardAuth.trustForwardHeader=true
        - traefik.http.middlewares.oauth-errors.errors.status=401,403
        - traefik.http.middlewares.oauth-errors.errors.service=oauth-backend
        - traefik.http.middlewares.oauth-errors.errors.query=/oauth2/sign_in?rd={url}
        # OAuth2 Proxy configuration
        - traefik.http.services.oauth-backend.loadbalancer.server.scheme=http
        - traefik.http.services.oauth-backend.loadbalancer.server.port=4180
        - traefik.http.routers.oauth.rule=Host(`traefik.${DOMAIN_DEV}`, `auth.${DOMAIN_DEV}`) && PathPrefix(`/oauth2/`)
        - traefik.http.routers.oauth.service=oauth-backend
        - traefik.http.routers.oauth.entrypoints=websecure
        - traefik.http.routers.oauth.tls.certresolver=${TRAEFIK_TLS_HTTP}
        - traefik.http.routers.oauth.middlewares=oauth2-dev-headers
