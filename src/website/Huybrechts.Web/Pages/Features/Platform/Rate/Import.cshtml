@page
@inject IStringLocalizer<Localization> SL
@model Huybrechts.Web.Pages.Features.Platform.Rate.ImportModel
@{
    ViewData["CardTitle"] = Model.Data.Product.Name + " | " + SL["RateImportTitle"];
    var prev = !Model.Data.Results.HasPreviousPage ? "disabled" : "";
    var next = !Model.Data.Results.HasNextPage ? "disabled" : "";
}
<partial name="_StatusMessage" for="StatusMessage" />
<p class="text-info">
    @SL["RateImportInfo"]
</p>
<div class="row">
    <div class="col-md-12">
        <div class="row">
            <form class="row row-cols-md-auto g-3 align-items-center">
                <div class="col-md-3 d-flex gap-1 align-items-center mb-3">
                    <button id="import-button" type="button" class="btn btn-primary" data-form-id="import-form">
                        <i class="bi bi-patch-plus-fill"></i>
                        <span class="vr"></span>
                        @SL["Add Selection"]
                    </button>
                    <a class="btn btn-secondary hstack gap-2 align-self-center" asp-page="Index" asp-route-platformProductId="@Model.Data.PlatformProductId">
                        <i class="bi-arrow-left-circle-fill"></i>
                        <span class="vr"></span>
                        @SL["Cancel"]
                    </a>
                </div>
                <div class="col-md-9 d-flex gap-1 align-items-center justify-content-md-end mb-3">
                    <select name="platformRegionId" class="form-control">
                        @if (Model.Data.Regions != null)
                        {
                            foreach (var region in Model.Data.Regions)
                            {
                                if (region.Id == Model.Data.PlatformRegionId)
                                {
                                    <option value="@region.Id" selected>@region.Label</option>
                                }
                                else
                                {
                                    <option value="@region.Id">@region.Label</option>
                                }
                            }
                        }
                    </select>
                    <select name="platformServiceId" class="form-control">
                        @if (Model.Data.Services != null)
                        {
                            foreach (var service in Model.Data.Services)
                            {
                                if (service.Id == Model.Data.PlatformServiceId)
                                {
                                    <option value="@service.Id" selected>@service.Label</option>
                                }
                                else
                                {
                                    <option value="@service.Id">@service.Label</option>
                                }
                            }
                        }
                    </select>
                    <select name="currencyCode" class="form-control">
                        @if (Model.Data.Currencies != null)
                        {
                            foreach (var currency in Model.Data.Currencies)
                            {
                                if (currency == Model.Data.CurrencyCode)
                                {
                                    <option value="@currency" selected="selected">@currency</option>
                                }
                                else
                                {
                                    <option value="@currency">@currency</option>
                                }
                            }
                        }
                    </select>
                    <input type="hidden" name="platformProductId" value="@Model.Data.PlatformProductId" />
                    <input type="text" name="SearchText" value="@Model.Data.CurrentFilter" placeholder="@SL["Search..."]" class="form-control" autocomplete="off" />
                    <input type="submit" value="@SL["Search"]" class="btn btn-primary" /> |
                    <a asp-page="Import" asp-route-platformProductId="@Model.Data.PlatformProductId" class="btn btn-secondary text-nowrap" type="button" role="button">@SL["Clear Filter"]</a>
                </div>
            </form>
            
            @if (Model.Data.Results.Count > 0)
            {
                <form id="import-form" method="post">
                    <input type="hidden" asp-for="@Model.Data.PlatformProductId" />
                    <input type="hidden" asp-for="@Model.Data.PlatformRegionId" />
                    <input type="hidden" asp-for="@Model.Data.PlatformServiceId" />
                    
                    <div class="table-responsove">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>@SL["Select"]</th>
                                    <th>@Html.DisplayNameFor(model => model.Data.Results[0].ProductName)</th>
                                    <th>@Html.DisplayNameFor(model => model.Data.Results[0].SkuName)</th>
                                    <th>@Html.DisplayNameFor(model => model.Data.Results[0].MeterName)</th>
                                    <th class="text-right">@Html.DisplayNameFor(model => model.Data.Results[0].RetailPrice)</th>
                                    <th class="text-center">@Html.DisplayNameFor(model => model.Data.Results[0].UnitOfMeasure)</th>
                                    <th class="text-right">@Html.DisplayNameFor(model => model.Data.Results[0].MinimumUnits)</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for(int idex = 0; idex<Model.Data.Results.Count; idex++)
                                {
                                    <input type="hidden" asp-for="@Model.Data.Results[idex].ServiceName" />
                                    <input type="hidden" asp-for="@Model.Data.Results[idex].ServiceFamily" />
                                    <input type="hidden" asp-for="@Model.Data.Results[idex].CurrencyCode" />
                                    <input type="hidden" asp-for="@Model.Data.Results[idex].ValidFrom" />
                                    <input type="hidden" asp-for="@Model.Data.Results[idex].UnitPrice" />
                                    <input type="hidden" asp-for="@Model.Data.Results[idex].RateType" />
                                    <input type="hidden" asp-for="@Model.Data.Results[idex].IsPrimaryRegion" />
                                    <input type="hidden" asp-for="@Model.Data.Results[idex].Remark" />

                                    <tr>
                                        <td>        
                                            <input type="checkbox" asp-for="@Model.Data.Results[idex].IsSelected" />
                                        </td>
                                        <td>
                                            <input type="hidden" asp-for="@Model.Data.Results[idex].ProductName" />
                                            @Html.DisplayFor(model => model.Data.Results[idex].ProductName)
                                        </td>
                                        <td>
                                            <input type="hidden" asp-for="@Model.Data.Results[idex].SkuName" />
                                            @Html.DisplayFor(model => model.Data.Results[idex].SkuName)
                                        </td>
                                        <td>
                                            <input type="hidden" asp-for="@Model.Data.Results[idex].MeterName" />
                                            @Html.DisplayFor(model => model.Data.Results[idex].MeterName)
                                        </td>
                                        <td class="text-end">
                                            <input type="hidden" asp-for="@Model.Data.Results[idex].RetailPrice" />
                                            @Html.DisplayFor(model => model.Data.Results[idex].RetailPrice)
                                        </td>
                                        <td class="text-center">
                                            <input type="hidden" asp-for="@Model.Data.Results[idex].UnitOfMeasure" />
                                            @Html.DisplayFor(model => model.Data.Results[idex].UnitOfMeasure)
                                        </td>
                                        <td class="text-end">
                                            <input type="hidden" asp-for="@Model.Data.Results[idex].MinimumUnits" />
                                            @Html.DisplayFor(model => model.Data.Results[idex].MinimumUnits)
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <nav class="text-align-center mt-5" aria-label="Table navigation">
                        <ul class="pagination justify-content-center">
                            <li class="page-item @prev">
                                <a asp-page="Import"
                                   asp-route-platformProductId="@Model.Data.PlatformProductId"
                                   asp-route-pageindex="@(Model.Data.Results.PageIndex - 1)"
                                   asp-route-currentFilter="@Model.Data.CurrentFilter"
                                   class="page-link" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                    <span class="sr-only">@SL["Previous"]</span>
                                </a>
                            </li>
                            @for (int i = 1; i <= Model.Data.Results.TotalPages; i++)
                            {
                                <li class="page-item @(Model.Data.Results.PageIndex == i ? "active" : string.Empty)" aria-current="page">
                                    <a asp-page="Import"

                                       asp-route-platformProductId="@Model.Data.PlatformProductId"
                                       asp-route-pageindex="@i"
                                       asp-route-currentFilter="@Model.Data.CurrentFilter"
                                       class="page-link">
                                        @(i)
                                    </a>
                                </li>
                            }
                            <li class="page-item @next">
                                <a asp-page="Import"
                                   asp-route-platformProductId="@Model.Data.PlatformProductId"
                                   asp-route-pageindex="@(Model.Data.Results.PageIndex + 1)"
                                   asp-route-currentFilter="@Model.Data.CurrentFilter"
                                   class="page-link" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                    <span class="sr-only">@SL["Next"]</span>
                                </a>
                            </li>
                        </ul>
                    </nav>
                </form>
            }
        </div>
    </div>
</div>

@section Breadcrumb {
    <li class="breadcrumb-item">@Model.Data.Platform.Name</li>
    <li class="breadcrumb-item"><a asp-page="/Features/Platform/Product/Index" asp-route-platformInfoId="@Model.Data.Platform.Id">@SL["Products"]</a></li>
    <li class="breadcrumb-item">@Model.Data.Product.Label</li>
    <li class="breadcrumb-item">@SL["Rates"]</li>
}

@section Scripts {
    <script src="~/js/external-card-menu.js"></script>
}