@page
@inject IStringLocalizer<Localization> SL
@model Huybrechts.Web.Pages.Features.Platform.Rate.IndexModel
@{
    ViewData["CardTitle"] = Model.Data.Product.Name + " | " + SL["RateIndexTitle"];
    var prev = !Model.Data.Results.HasPreviousPage ? "disabled" : "";
    var next = !Model.Data.Results.HasNextPage ? "disabled" : "";
}
<partial name="_StatusResult" for="StatusMessage" />
<p class="text-info">
    @SL["RateIndexInfo"]
</p>
<div class="row">
    <div class="col-md-12">
        
        <div class="row">
            <form class="row row-cols-md-auto g-3 align-items-center">
                <div class="col-md-3 d-flex gap-1 align-items-center mb-3">
                    <a class="btn btn-secondary hstack gap-2 align-self-center" asp-page="/Features/Platform/Product/Index" asp-route-platformInfoId="@Model.Data.Platform.Id">
                        <i class="bi bi-arrow-up-circle-fill fs-5"></i>
                    </a>
                    <a class="btn btn-primary hstack gap-2 align-self-center" asp-page="Create" asp-route-platformProductId="@Model.Data.PlatformProductId">
                        <i class="bi bi-plus-circle fs-5"></i>
                        <span class="vr"></span>
                        @SL["Add New"]
                    </a>
                    @if (Model.Data.Platform.Provider != Core.Platform.PlatformProvider.None)
                    {
                        <a class="btn btn-primary hstack gap-2 align-self-center" asp-page="Import" asp-route-platformProductId="@Model.Data.PlatformProductId">
                            <i class="bi bi-cloud-arrow-down-fill fs-5"></i>
                            <span class="vr"></span>
                            @SL["Import"]
                        </a>
                    }
                </div>
                <div class="col-md-9 d-flex gap-1 align-items-center justify-content-md-end mb-3">
                    <input type="hidden" name="platformProductId" value="@Model.Data.PlatformProductId" />

                    <select name="platformRegionId" class="form-control">
                        <option value="@Ulid.Empty">@SL["Select"]</option>
                        @foreach (var region in Model.Data.Regions)
                        {
                            if (region.Id == Model.Data.PlatformRegionId)
                            {
                                <option value="@region.Id.ToString()" selected>@region.Label</option>
                            }
                            else
                            {
                                <option value="@region.Id.ToString()">@region.Label</option>
                            }
                        }
                    </select>

                    <select name="platformServiceId" class="form-control">
                        <option value="@Ulid.Empty">@SL["Select"]</option>
                        @foreach (var service in Model.Data.Services)
                        {
                            if (service.Id == Model.Data.PlatformServiceId)
                            {
                                <option value="@service.Id.ToString()" selected>@service.Label</option>
                            }
                            else
                            {
                                <option value="@service.Id.ToString()">@service.Label</option>
                            }
                        }
                    </select>

                    <select name="currencyCode" class="form-control">
                        <option value="">@SL["Select"]</option>
                        @foreach (var currency in Model.Data.Currencies)
                        {
                            if (currency == Model.Data.CurrencyCode)
                            {
                                <option value="@currency" selected>@currency</option>
                            }
                            else
                            {
                                <option value="@currency">@currency</option>
                            }
                        }
                    </select>
                    <input type="text" name="searchText" value="@Model.Data.CurrentFilter" placeholder="@SL["Search..."]" class="form-control" autocomplete="off" />
                    <input type="submit" value="@SL["Search"]" class="btn btn-primary" /> |
                    <a asp-page="Index" asp-route-platformProductId="@Model.Data.PlatformProductId" class="btn btn-secondary text-nowrap" type="button" role="button">@SL["Clear Filter"]</a>
                </div>
            </form>
            @if (Model.Data.Results.Count > 0)
            {
                <div class="table-responsove">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>@Html.DisplayNameFor(model => model.Data.Results[0].ServiceName)</th>
                                <th>@Html.DisplayNameFor(model => model.Data.Results[0].ProductName)</th>
                                <th>@Html.DisplayNameFor(model => model.Data.Results[0].SkuName)</th>
                                <th>@Html.DisplayNameFor(model => model.Data.Results[0].MeterName)</th>
                                <th class="text-end">@Html.DisplayNameFor(model => model.Data.Results[0].RetailPrice)</th>
                                <th class="text-center">@Html.DisplayNameFor(model => model.Data.Results[0].UnitOfMeasure)</th>
                                <th class="text-end">@Html.DisplayNameFor(model => model.Data.Results[0].MinimumUnits)</th>
                                <th>@Html.DisplayNameFor(model => model.Data.Results[0].CurrencyCode)</th>
                                <th>@Html.DisplayNameFor(model => model.Data.Results[0].PlatformRegionLabel)</th>
                                <th></th>
                            </tr>
                            
                        </thead>
                        <tbody>
                            @foreach (var record in Model.Data.Results)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => record!.ServiceName)</td>
                                    <td>@Html.DisplayFor(modelItem => record!.ProductName)</td>
                                    <td>@Html.DisplayFor(modelItem => record!.SkuName)</td>
                                    <td>@Html.DisplayFor(modelItem => record!.MeterName)</td>
                                    <td class="text-end">@Html.DisplayFor(modelItem => record!.RetailPrice)</td>
                                    <td class="text-cennter">@Html.DisplayFor(modelItem => record!.UnitOfMeasure)</td>
                                    <td class="text-end">@Html.DisplayFor(modelItem => record!.MinimumUnits)</td>
                                    <td>@Html.DisplayFor(modelItem => record!.CurrencyCode)</td>
                                    <td>@Html.DisplayFor(modelItem => record!.PlatformRegionLabel)</td>
                                    <td>
                                        <a asp-page="Edit" asp-route-id="@record!.Id" class="btn btn-icon btn-primary"><i class="bi bi-pencil-square"></i></a>
                                        <a asp-page="Delete" asp-route-id="@record!.Id" class="btn btn-icon btn-secondary"><i class="bi bi-trash2-fill"></i></a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <nav class="text-align-center mt-5" aria-label="Table navigation">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @prev">
                            <a asp-page="Index"
                               asp-route-platformProductId="@Model.Data.PlatformProductId"
                               asp-route-currentFilter="@Model.Data.CurrentFilter"
                               asp-route-sortOrder="@Model.Data.CurrentFilter"
                               asp-route-pageindex="@(Model.Data.Results.PageIndex - 1)"
                               class="page-link" aria-label="Previous">
                               <span aria-hidden="true">&laquo;</span>
                               <span class="sr-only">@SL["Previous"]</span>
                            </a>
                        </li>
                        @for (int i = 1; i <= Model.Data.Results.TotalPages; i++)
                        {
                            <li class="page-item @(Model.Data.Results.PageIndex == i ? "active" : string.Empty)" aria-current="page">
                                <a asp-page="Index"
                                   asp-route-platformProductId="@Model.Data.PlatformProductId"
                                   asp-route-currentFilter="@Model.Data.CurrentFilter"
                                   asp-route-sortOrder="@Model.Data.CurrentFilter"
                                   asp-route-pageindex="@i"
                                   class="page-link">
                                   @(i)
                                </a>
                            </li>
                        }
                        <li class="page-item @next">
                            <a asp-page="Index"
                               asp-route-platformProductId="@Model.Data.PlatformProductId"
                               asp-route-currentFilter="@Model.Data.CurrentFilter"
                               asp-route-sortOrder="@Model.Data.CurrentFilter"
                               asp-route-pageindex="@(Model.Data.Results.PageIndex + 1)"
                               class="page-link" aria-label="Next">
                               <span aria-hidden="true">&raquo;</span>
                               <span class="sr-only">@SL["Next"]</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            }
            else
            {
                <div class="card border-2 border-secondary">
                    <h5 class="card-body">@SL["RateNoResults"]</h5>
                </div>
            }
        </div>
    </div>
</div>

@section Breadcrumb {
    <li class="breadcrumb-item">@Model.Data.Platform.Name</li>
    <li class="breadcrumb-item"><a asp-page="/Features/Platform/Product/Index" asp-route-platformInfoId="@Model.Data.Platform.Id">@SL["Products"]</a></li>
    <li class="breadcrumb-item">@Model.Data.Product.Label</li>
    <li class="breadcrumb-item">@SL["Rates"]</li>
}