<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add New" xml:space="preserve">
    <value>Toevoegen</value>
  </data>
  <data name="Add Selection" xml:space="preserve">
    <value>Add Selection</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annuleer</value>
  </data>
  <data name="Clear Filter" xml:space="preserve">
    <value>Wis filter</value>
  </data>
  <data name="Design" xml:space="preserve">
    <value>Ontwerp</value>
  </data>
  <data name="DesignCreateInfo" xml:space="preserve">
    <value>Gebruik dit formulier om een nieuw ontwerp voor uw project toe te voegen. Geef details over de voorgestelde oplossing, inclusief de naam en beschrijving ervan.</value>
  </data>
  <data name="DesignCreateTitle" xml:space="preserve">
    <value>Nieuw Projectontwerp Maken</value>
  </data>
  <data name="DesignDeleteInfo" xml:space="preserve">
    <value>Weet u zeker dat u dit projectontwerp wilt verwijderen? Deze actie kan niet ongedaan worden gemaakt en zal het ontwerp permanent uit het project verwijderen.</value>
  </data>
  <data name="DesignDeleteTitle" xml:space="preserve">
    <value>Projectontwerp Verwijderen</value>
  </data>
  <data name="DesignEditInfo" xml:space="preserve">
    <value>Gebruik dit formulier om de details van een bestaand projectontwerp bij te werken. Breng wijzigingen aan in de naam of beschrijving van het ontwerp en sla uw updates op.</value>
  </data>
  <data name="DesignEditTitle" xml:space="preserve">
    <value>Projectontwerp Bewerken</value>
  </data>
  <data name="DesignIndexInfo" xml:space="preserve">
    <value>Deze pagina toont alle ontwerpen voor het geselecteerde project. Hier kunt u bestaande ontwerpen bekijken, bewerken of verwijderen, of een nieuw ontwerp maken om verschillende oplossingen voor te stellen.</value>
  </data>
  <data name="DesignIndexTitle" xml:space="preserve">
    <value>Projectontwerpen</value>
  </data>
  <data name="Designs" xml:space="preserve">
    <value>Ontwerpen</value>
  </data>
  <data name="InfoCreateInfo" xml:space="preserve">
    <value>Gebruik dit formulier om een nieuw project aan te maken. Vul alle verplichte velden in, zoals projectnaam, beschrijving en startdatum, om een nieuw project toe te voegen.</value>
  </data>
  <data name="InfoCreateTitle" xml:space="preserve">
    <value>Nieuw project aanmaken</value>
  </data>
  <data name="InfoDeleteInfo" xml:space="preserve">
    <value>Weet u zeker dat u dit project wilt verwijderen? Deze actie kan niet ongedaan worden gemaakt en zal het project permanent van het platform verwijderen.</value>
  </data>
  <data name="InfoDeleteTitle" xml:space="preserve">
    <value>Project verwijderen</value>
  </data>
  <data name="InfoEditInfo" xml:space="preserve">
    <value>Gebruik dit formulier om de details van een bestaand project te bewerken. Werk de benodigde velden bij en sla uw wijzigingen op om de projectinformatie up-to-date te houden.</value>
  </data>
  <data name="InfoEditTitle" xml:space="preserve">
    <value>Project bewerken</value>
  </data>
  <data name="InfoIndexInfo" xml:space="preserve">
    <value>Deze pagina geeft een overzicht van alle projecten op het platform.</value>
  </data>
  <data name="InfoIndexTitle" xml:space="preserve">
    <value>Projectoverzicht</value>
  </data>
  <data name="InfoNoResults" xml:space="preserve">
    <value>InfoNoResults</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Volgende</value>
  </data>
  <data name="PageInfo" xml:space="preserve">
    <value>Beheer uw projecten</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>Project Management</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Vorige</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Zoek</value>
  </data>
  <data name="Search..." xml:space="preserve">
    <value>Zoek...</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Selecteer</value>
  </data>
</root>