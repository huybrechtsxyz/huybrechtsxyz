@page
@inject IStringLocalizer<Localization> SL
@model Huybrechts.Web.Pages.Features.Project.Component.IndexModel
@{
    ViewData["CardTitle"] = Model.Data.ProjectInfo.Name + " | " + Model.Data.ProjectDesign.Name + " | " + SL["ComponentIndexTitle"];
}

@section Links {
    <link rel="stylesheet" href="/lib/tabulator/css/tabulator.min.css" />
}

<partial name="_StatusResult" for="StatusMessage" />
<p class="text-info">
    @SL["ComponentIndexInfo"]
</p>
<div class="row">
    <div class="col-md-12">
        <div class="row">
            <form class="row row-cols-md-auto g-3 align-items-center">
                <div class="col-md-3 d-flex gap-1 align-items-center mb-3">
                    <a class="btn btn-secondary hstack gap-2 align-self-center" asp-page="/Features/Project/Design/Index" asp-route-ProjectInfoId="@Model.Data.ProjectInfo.Id">
                        <i class="bi bi-arrow-up-circle-fill fs-5"></i>
                    </a>
                    <a class="btn btn-primary hstack gap-2 align-self-center" asp-page="Create" asp-route-ProjectDesignId="@Model.Data.ProjectDesign.Id">
                        <i class="bi bi-plus-circle fs-5"></i>
                        <span class="vr"></span>
                        @SL["Add New"]
                    </a>
                    <button id="addEntityButton" type="button" class="btn btn-primary" onclick="addEntity()">Add Child</button>
                    <button id="editEntityButton" type="button" class="btn btn-primary" onclick="editEntity()">Edit</button>
                    <button id="deleteEntityButton" type="button" class="btn btn-primary" onclick="deleteEntity()">Delete</button>
                </div>
            </form>
            @if (Model.Data.Results.Count > 0)
            {
                <div class="table-responsive">
                    <table id="table" class="table table-striped">
                    </table>
                </div>
            }
            else
            {
                <div class="card border-2 border-secondary">
                    <h5 class="card-body">@SL["ComponentNoResults"]</h5>
                </div>
            }
        </div>
    </div>
</div>

@section Breadcrumb {
    <li class="breadcrumb-item">@Model.Data.ProjectInfo.Name</li>
    <li class="breadcrumb-item"><a asp-page="/Features/Design/Index" asp-route-ProjectDesignId="@Model.Data.ProjectDesign.Id">@Model.Data.ProjectDesign.Name</a></li>
}

@section Scripts {
    <script src="/lib/tabulator/js/tabulator.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var table = new Tabulator("#table", {
                layout: "fitColumns", // Fit columns to width of table
                dataTree: true,
                dataTreeStartExpanded: true,
                dataTreeChildField: "children",
                columns: [
                    { title: "Name", field: "name", sorter: "string" },
                    { title: "Description", field: "description", sorter: "string" },
                    { title: "Component Level", field: "componentLevel", sorter: "string" },
                    { title: "Variant Type", field: "variantType", sorter: "string" },
                    { title: "Source", field: "source", sorter: "string" }
                ],
            });
            $.ajax({
                url: "?handler=load",  // The Razor page URL
                method: "GET",
                data: {
                    projectDesignId: "@Model.Data.ProjectDesign.Id",
                    parentId: "@Model.Data.ParentId"
                },
                success: function (response) {
                    // On success, set the data to Tabulator
                    console.log("so far so good");
                    table.setData(response);
                },
                error: function (error) {
                    console.error("Error loading data:", error);
                }
            });
        });
    </script>
    <script>
        function addEntity() {
            var selectedRecord = getSelectedRow();
            if (selectedRecord === null) {
                return;
            }

            window.location.href = '/' + getTenantFromUrl() + '/Features/Project/Component/Create?'
                + 'ProjectDesignId=' + selectedRecord.designId
                + '&parentId=' + selectedRecord.id;
        }
        function editEntity() {
            var selectedRecord = getSelectedRow();
            if (selectedRecord === null) {
                return;
            }

            window.location.href = '/' + getTenantFromUrl() + '/Features/Project/Component/Edit?'
                + 'Id=' + selectedRecord.id;
        }
        function deleteEntity() {
            var selectedRecord = getSelectedRow();
            if (selectedRecord === null) {
                return;
            }

            window.location.href = '/' + getTenantFromUrl() + '/Features/Project/Component/Delete?'
                + 'Id=' + selectedRecord.id;
        }
        function getSelectedRow() {
            var selectedRow = $('#table').bootstrapTable('getSelections'); // Get the selected row
            if (selectedRow.length === 0) {
                alert('Please select a row first.');
                null; // Return null if no row is selected
            }

            return selectedRow[0]; // Return the first selected row
        }
        function getTenantFromUrl() {
            // Get the current URL's pathname
            var pathParts = window.location.pathname.split('/');
            // The tenant is the first part after the root domain
            // pathParts[1] will give you the tenant name
            var tenant = pathParts[1];
            // Return the tenant or log it
            return tenant;
        }
    </script>
}