@page
@inject IStringLocalizer<Localization> SL
@model Huybrechts.Web.Pages.Features.Project.Component.IndexModel
@{
    ViewData["CardTitle"] = Model.Data.ProjectInfo.Name + " | " + Model.Data.ProjectDesign.Name + " | " + SL["ComponentIndexTitle"];
}

@* @section Links {
    <link rel="stylesheet" href="/lib/tabulator/css/tabulator_bootstrap5.min.css" />
} *@

<partial name="_StatusResult" for="StatusMessage" />
<p class="text-info">
    @SL["ComponentIndexInfo"]
</p>
<div class="row">
    <div class="col-md-12">
        <div class="row">
            <div class="mb-2 col-md-6 d-flex gap-1 align-items-center" role="group" id="actionButtons">
                <a class="btn btn-secondary hstack gap-2 align-self-center" asp-page="/Features/Project/Design/Index" asp-route-ProjectInfoId="@Model.Data.ProjectInfo.Id">
                    <i class="bi bi-arrow-up-circle-fill fs-5"></i>
                </a>
                <a class="btn btn-primary hstack gap-2 align-self-center" asp-page="Create" asp-route-ProjectDesignId="@Model.Data.ProjectDesign.Id">
                    <i class="bi bi-plus-circle fs-5"></i>
                    <span class="vr"></span>
                    @SL["Add New"]
                </a>
                <button id="addBtn" class="btn btn-primary hstack gap-2 align-self-center" disabled>
                    <i class="bi bi-plus-circle fs-5"></i>
                    <span class="vr"></span>
                    @SL["Add Child"]
                </button>
                <button id="editBtn" class="btn btn-icon btn-primary fs-5 hstack gap-2" disabled><i class="bi bi-pencil-square"></i></button>
                <button id="deleteBtn" class="btn btn-icon btn-secondary fs-5 hstack gap-2" disabled><i class="bi bi-trash2-fill"></i></button>
                <button id="unitBtn" class="btn btn-info hstack gap-2 align-self-center" disabled>
                    <i class="bi bi-calculator fs-5"></i>
                    <span class="vr"></span>
                    @SL["ComponentUnits"]
                </button>
            </div>
            @if (Model.Data.Results.Count > 0)
            {
                <div class="table-responsive">
                    <table id="table" class="table table-striped">
                    </table>
                </div>
            }
            else
            {
                <div class="card border-2 border-secondary">
                    <h5 class="card-body">@SL["ComponentNoResults"]</h5>
                </div>
            }
        </div>
    </div>
</div>

@section Breadcrumb {
    <li class="breadcrumb-item">@Model.Data.ProjectInfo.Name</li>
    <li class="breadcrumb-item"><a asp-page="/Features/Project/Design/Index" asp-route-ProjectInfoId="@Model.Data.ProjectInfo.Id">@Model.Data.ProjectDesign.Name</a></li>
    <li class="breadcrumb-item"><a asp-page="/Features/Project/Component/Index" asp-route-ProjectDesignId="@Model.Data.ProjectDesignId">@SL["Components"]</a></li>
}

@section Scripts {
    <script src="/lib/tabulator/js/tabulator.min.js"></script>
    <script>
        function loadTabulatorTheme() {
            let link = document.createElement('link');
            link.rel = 'stylesheet';
            // Check for user's system theme preference
            //if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
            if (document.documentElement.getAttribute('data-bs-theme') == 'dark') {
                link.href = '/lib/tabulator/css/tabulator_midnight.min.css';
            } else {
                link.href = '/lib/tabulator/css/tabulator.min.css';
            }
            document.head.appendChild(link);
        }

        // Call the function to load the correct theme
        loadTabulatorTheme();

        function getUrl() {
            var pathParts = window.location.pathname.split('/');
            var tenant = pathParts[1];
            return `/${tenant}/Features/Project`;
        }

        function getSelectedRow() {
            var selectedRow = $('#table').tabulator("getSelectedRows"); // Use Tabulator's API to get selected rows
            if (selectedRow.length === 0) {
                alert('Please select a row first.');
                return null; // Return null if no row is selected
            }
            return selectedRow[0]; // Return the first selected row
        }

        function loadTable() {
            var table = new Tabulator("#table", {
                //layout: "fitColumns",
                selectableRows: 1,
                dataTree: true,
                dataTreeStartExpanded: true,
                dataTreeChildField: "children",
                columns: [
                    { title: "ID", field: "id", sorter: "number", visible: false },  // Hidden column for ID
                    { title: "Name", field: "name", sorter: "string" },
                    { title: "Sequence", field: "sequence", sorter: "number", hozAlign: "right" },
                    { title: "Description", field: "description", sorter: "string" },
                    { title: "Units", field: "countComponentUnits", sorter: "int", hozAlign: "center" },
                    { title: "Source", field: "source", sorter: "string" },
                ]
            });

            table.on("rowSelectionChanged", function (data, rows, selected, deselected) {
                if (data.length === 0) {
                    // No row selected, disable buttons
                    $("#addBtn, #editBtn, #deleteBtn, #unitBtn").prop("disabled", true);
                    window.selectedRecord = null; // Clear global selectedRecord
                } else {
                    // A row is selected, enable buttons
                    $("#addBtn, #editBtn, #deleteBtn, #unitBtn").prop("disabled", false);
                    window.selectedRecord = data[0]; // Store selected record globally
                }
            });

            $.ajax({
                url: "?handler=load",
                method: "GET",
                data: {
                    projectDesignId: "@Model.Data.ProjectDesign.Id",
                    parentId: "@Model.Data.ParentId"
                },
                success: function (response) {
                    // On success, set the data to Tabulator
                    table.setData(response);
                },
                error: function (error) {
                    console.error("Error loading data:", error);
                }
            });
        };

        document.addEventListener("DOMContentLoaded", function () {
            loadTable();
        });

        window.addEventListener("pageshow", function (event) {
            if (event.persisted || performance.getEntriesByType("navigation")[0].type === "back_forward") {
                loadTable();
            }
        });

        $("#addBtn").click(function () {
            if (window.selectedRecord) {
                var recordId = window.selectedRecord.id;
                var uri = getUrl() + `/Component/Create?projectDesignId=@Model.Data.ProjectDesignId&parentId=${recordId}`;
                window.location.href = uri;
            }
        });

        $("#editBtn").click(function () {
            if (window.selectedRecord) {
                var recordId = window.selectedRecord.id;
                var uri = getUrl() + `/Component/Edit?id=${recordId}`;
                window.location.href = uri;
            }
        });

        $("#deleteBtn").click(function () {
            if (window.selectedRecord) {
                var recordId = window.selectedRecord.id;
                var uri = getUrl() + `/Component/Delete?id=${recordId}`;
                window.location.href = uri;
            }
        });

        $("#unitBtn").click(function () {
            if (window.selectedRecord) {
                var recordId = window.selectedRecord.id;
                var uri = getUrl() + `/ComponentUnit?projectComponentId=${recordId}`;
                window.location.href = uri;
            }
        });
    </script>
}