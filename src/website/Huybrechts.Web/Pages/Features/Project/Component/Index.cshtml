@page
@inject IStringLocalizer<Localization> SL
@model Huybrechts.Web.Pages.Features.Project.Component.IndexModel
@{
    ViewData["CardTitle"] = Model.Data.ProjectInfo.Name + " | " + Model.Data.ProjectDesign.Name + " | " + SL["ComponentIndexTitle"];
}

@section Links {
    <link rel="stylesheet" href="/lib/tabulator/css/tabulator.min.css" />
}

<partial name="_StatusResult" for="StatusMessage" />
<p class="text-info">
    @SL["ComponentIndexInfo"]
</p>
<div class="row">
    <div class="col-md-12">
        <div class="row">
            <form class="row row-cols-md-auto g-3 align-items-center">
                <div class="col-md-3 d-flex gap-1 align-items-center mb-3">
                    <a class="btn btn-secondary hstack gap-2 align-self-center" asp-page="/Features/Project/Design/Index" asp-route-ProjectInfoId="@Model.Data.ProjectInfo.Id">
                        <i class="bi bi-arrow-up-circle-fill fs-5"></i>
                    </a>
                    <a class="btn btn-primary hstack gap-2 align-self-center" asp-page="Create" asp-route-ProjectDesignId="@Model.Data.ProjectDesign.Id">
                        <i class="bi bi-plus-circle fs-5"></i>
                        <span class="vr"></span>
                        @SL["Add New"]
                    </a>
                    <button id="addEntityButton" type="button" class="btn btn-primary" onclick="addEntity()">Add Child</button>
                    <button id="editEntityButton" type="button" class="btn btn-primary" onclick="editEntity()">Edit</button>
                    <button id="deleteEntityButton" type="button" class="btn btn-primary" onclick="deleteEntity()">Delete</button>
                </div>
            </form>
            @if (Model.Data.Results.Count > 0)
            {
                <div class="table-responsive">
                    <table id="table" class="table table-striped">
                    </table>
                </div>
            }
            else
            {
                <div class="card border-2 border-secondary">
                    <h5 class="card-body">@SL["ComponentNoResults"]</h5>
                </div>
            }
        </div>
    </div>
</div>

@section Breadcrumb {
    <li class="breadcrumb-item">@Model.Data.ProjectInfo.Name</li>
    <li class="breadcrumb-item"><a asp-page="/Features/Design/Index" asp-route-ProjectDesignId="@Model.Data.ProjectDesign.Id">@Model.Data.ProjectDesign.Name</a></li>
}

@section Scripts {
    <script src="/lib/tabulator/js/tabulator.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // var ajaxURL = "/Component";
            // var ajaxParams = {
            //     handler: "Load",
            //     projectDesignId: "@Model.Data.ProjectDesign.Id",
            //     parentId: "@Model.Data.ParentId"
            // };           
            // var initDataTable = [
            //     { "id": "01J7DS881NHWZQ7YNXPX9DDRAM", "projectInfoId": "01J7C2EDJP2X1B69V39P41158H", "projectDesignId": "01J7C38YVH30XM7JZFQ73D03RR", "parentId": "00000000000000000000000000", "children": [{ "id": "01J7H76ZH6KTTT6XJYWMTKDT9H", "projectInfoId": "01J7C2EDJP2X1B69V39P41158H", "projectDesignId": "01J7C38YVH30XM7JZFQ73D03RR", "parentId": "01J7DS881NHWZQ7YNXPX9DDRAM", "children": [{ "id": "01J7HABWQBKEAVFA3VP023Y75R", "projectInfoId": "01J7C2EDJP2X1B69V39P41158H", "projectDesignId": "01J7C38YVH30XM7JZFQ73D03RR", "parentId": "01J7H76ZH6KTTT6XJYWMTKDT9H", "children": [{ "id": "01J7HAH57WWF6BT0PRWVHD0TGV", "projectInfoId": "01J7C2EDJP2X1B69V39P41158H", "projectDesignId": "01J7C38YVH30XM7JZFQ73D03RR", "parentId": "01J7HABWQBKEAVFA3VP023Y75R", "children": [], "sequence": 0, "name": "Extra polishing", "description": null, "remark": null, "componentLevel": 3, "variantType": 1, "sourceType": 0, "source": null, "platformInfoId": null, "platformProductId": null, "searchIndex": "extra polishing~~" }, { "id": "01J7HAFK6EX4V4GWGCVZD24PMZ", "projectInfoId": "01J7C2EDJP2X1B69V39P41158H", "projectDesignId": "01J7C38YVH30XM7JZFQ73D03RR", "parentId": "01J7HABWQBKEAVFA3VP023Y75R", "children": [], "sequence": 0, "name": "Houten Keukenblad", "description": null, "remark": null, "componentLevel": 3, "variantType": 0, "sourceType": 0, "source": null, "platformInfoId": null, "platformProductId": null, "searchIndex": "houten keukenblad~~" }, { "id": "01J7HAG5NFSHFH1HWW5EY0ZZXQ", "projectInfoId": "01J7C2EDJP2X1B69V39P41158H", "projectDesignId": "01J7C38YVH30XM7JZFQ73D03RR", "parentId": "01J7HABWQBKEAVFA3VP023Y75R", "children": [], "sequence": 0, "name": "Stalen keukenblad", "description": null, "remark": null, "componentLevel": 3, "variantType": 0, "sourceType": 0, "source": null, "platformInfoId": null, "platformProductId": null, "searchIndex": "stalen keukenblad~~" }], "sequence": 0, "name": "Keukenblad", "description": "Het keukenblad", "remark": null, "componentLevel": 2, "variantType": 0, "sourceType": 0, "source": null, "platformInfoId": null, "platformProductId": null, "searchIndex": "keukenblad~het keukenblad~" }], "sequence": 0, "name": "Ikea Keuken", "description": "De keuken van ikea", "remark": null, "componentLevel": 1, "variantType": 0, "sourceType": 0, "source": null, "platformInfoId": null, "platformProductId": null, "searchIndex": "ikea keuken~de keuken van ikea~" }], "sequence": 0, "name": "Keuken", "description": "De keuken", "remark": null, "componentLevel": 0, "variantType": 0, "sourceType": 0, "source": null, "platformInfoId": null, "platformProductId": null, "searchIndex": "keuken~de keuken~" }
            // ];
            var table = new Tabulator("#table", {
                // data: initDataTable,
                // ajaxURL: ajaxURL,  // URL to fetch data
                // ajaxParams: ajaxParams, // Query parameters
                // ajaxConfig: "GET", // HTTP request type
                // ajaxContentType: "json",
                layout: "fitColumns", // Fit columns to width of table
                dataTree: true,
                dataTreeStartExpanded: true,
                dataTreeChildField: "children",
                columns: [
                    { title: "ID", field: "id", sorter: "number" },
                    { title: "Name", field: "name", sorter: "string" },
                    { title: "Description", field: "description", sorter: "string" },
                    { title: "Remark", field: "remark", sorter: "string" },
                    { title: "Sequence", field: "sequence", sorter: "number" },
                    { title: "Component Level", field: "componentLevel", sorter: "string" },
                    { title: "Variant Type", field: "variantType", sorter: "string" },
                    { title: "Source Type", field: "sourceType", sorter: "string" },
                    { title: "Source", field: "source", sorter: "string" }
                ],
            });

            // AJAX call to fetch data
            $.ajax({
                url: "?handler=load",  // The Razor page URL
                method: "GET",
                data: {
                    projectDesignId: "@Model.Data.ProjectDesign.Id",
                    parentId: "@Model.Data.ParentId"
                },
                success: function (response) {
                    // On success, set the data to Tabulator
                    console.log("so far so good");
                    table.setData(response);
                },
                error: function (error) {
                    console.error("Error loading data:", error);
                }
            });
        });
    </script>
    <script>
        function addEntity() {
            var selectedRecord = getSelectedRow();
            if (selectedRecord === null) {
                return;
            }

            window.location.href = '/' + getTenantFromUrl() + '/Features/Project/Component/Create?'
                + 'ProjectDesignId=' + selectedRecord.designId
                + '&parentId=' + selectedRecord.id;
        }
        function editEntity() {
            var selectedRecord = getSelectedRow();
            if (selectedRecord === null) {
                return;
            }

            window.location.href = '/' + getTenantFromUrl() + '/Features/Project/Component/Edit?'
                + 'Id=' + selectedRecord.id;
        }
        function deleteEntity() {
            var selectedRecord = getSelectedRow();
            if (selectedRecord === null) {
                return;
            }

            window.location.href = '/' + getTenantFromUrl() + '/Features/Project/Component/Delete?'
                + 'Id=' + selectedRecord.id;
        }
        function getSelectedRow() {
            var selectedRow = $('#table').bootstrapTable('getSelections'); // Get the selected row
            if (selectedRow.length === 0) {
                alert('Please select a row first.');
                null; // Return null if no row is selected
            }

            return selectedRow[0]; // Return the first selected row
        }
        function getTenantFromUrl() {
            // Get the current URL's pathname
            var pathParts = window.location.pathname.split('/');
            // The tenant is the first part after the root domain
            // pathParts[1] will give you the tenant name
            var tenant = pathParts[1];
            // Return the tenant or log it
            return tenant;
        }
    </script>
}