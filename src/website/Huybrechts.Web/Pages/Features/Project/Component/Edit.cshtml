@page
@inject IStringLocalizer<Localization> SL
@model Huybrechts.Web.Pages.Features.Project.Component.EditModel
@{
    ViewData["CardTitle"] = Model.Data.ProjectInfoName + " | " + Model.Data.ProjectDesignName + " | " + SL["ComponentEditTitle"];
}

<partial name="_StatusResult" for="StatusMessage" />
<p class="text-info">
    @SL["ComponentEditInfo"]
</p>

<div class="row">
    <div class="col-md-6">
        <form id="create-form" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="All" class="text-danger" role="alert"></div>
            <input type="hidden" asp-for="Data.Id" />
            <input type="hidden" asp-for="Data.ProjectInfoId" />
            <input type="hidden" asp-for="Data.ProjectDesignId" />
            <input type="hidden" asp-for="Data.ParentId" />
            <div class="form-floating mb-3">
                <input asp-for="Data.ProjectDesignName" class="form-control" disabled/>
                <label asp-for="Data.ProjectDesignName" class="form-label"></label>
                <span asp-validation-for="Data.ProjectDesignId" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Data.Name" class="form-control border-info" required />
                <label asp-for="Data.Name" class="form-label"></label>
                <span asp-validation-for="Data.Name" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Data.Sequence" class="form-control border-info" required />
                <label asp-for="Data.Sequence" class="form-label"></label>
                <span asp-validation-for="Data.Sequence" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Data.Description" class="form-control" />
                <label asp-for="Data.Description" class="form-label"></label>
                <span asp-validation-for="Data.Description" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Data.Proposal" class="form-control" list="proposals" />
                <datalist id="proposals"></datalist>
                <label asp-for="Data.Proposal" class="form-label"></label>
                <span asp-validation-for="Data.Proposal" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Data.Account" class="form-control" list="accounts" />
                <datalist id="accounts"></datalist>
                <label asp-for="Data.Account" class="form-label"></label>
                <span asp-validation-for="Data.Account" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Data.Organization" class="form-control" list="organizations" />
                <datalist id="organizations"></datalist>
                <label asp-for="Data.Organization" class="form-label"></label>
                <span asp-validation-for="Data.Organization" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Data.OrganizationalUnit" class="form-control" list="orgunits" />
                <datalist id="orgunits"></datalist>
                <label asp-for="Data.OrganizationalUnit" class="form-label"></label>
                <span asp-validation-for="Data.OrganizationalUnit" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Data.Location" class="form-control" list="locations" />
                <datalist id="locations"></datalist>
                <label asp-for="Data.Location" class="form-label"></label>
                <span asp-validation-for="Data.Location" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Data.Environment" class="form-control" list="environments" />
                <datalist id="environments"></datalist>
                <label asp-for="Data.Environment" class="form-label"></label>
                <span asp-validation-for="Data.Environment" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Data.Group" class="form-control" list="groups" />
                <datalist id="groups"></datalist>
                <label asp-for="Data.Group" class="form-label"></label>
                <span asp-validation-for="Data.Group" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Data.Responsible" class="form-control" list="responsibles" />
                <datalist id="responsibles"></datalist>
                <label asp-for="Data.Responsible" class="form-label"></label>
                <span asp-validation-for="Data.Responsible" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Data.OwnershipPercentage" class="form-control" />
                <label asp-for="Data.OwnershipPercentage" class="form-label"></label>
                <span asp-validation-for="Data.OwnershipPercentage" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <select id="sourceType"
                        asp-for="Data.SourceType"
                        asp-items="Html.GetEnumSelectList<Huybrechts.Core.Project.SourceType>()"
                        class="form-select"></select>
                <label asp-for="Data.SourceType" class="form-label"></label>
            </div>
            <div id="platformSection" class="form-floating mb-3" style="display:none;">
                <select id="platforms"
                        asp-for="Data.PlatformInfoId"
                        class="form-select">
                    <option value="@Ulid.Empty">@SL["Select a platform"]</option>
                    @if(Model.Data.PlatformInfoId.HasValue && Model.Data.PlatformInfoId != Ulid.Empty)
                    {
                        <option value="@Model.Data.PlatformInfoId" selected>@Model.Data.PlatformInfoName</option>
                    }
                </select>
                <label asp-for="Data.PlatformInfoId" class="form-label"></label>
            </div>
            <div id="productSection" class="form-floating mb-3" style="display:none;">
                <select id="products"
                        asp-for="Data.PlatformProductId"
                        class="form-select">
                    <option value="@Ulid.Empty">@SL["Select a product"]</option>
                    @if (Model.Data.PlatformProductId.HasValue && Model.Data.PlatformProductId != Ulid.Empty)
                    {
                        <option value="@Model.Data.PlatformProductId" selected>@Model.Data.PlatformProductName</option>
                    }
                </select>
                <label asp-for="Data.PlatformProductId" class="form-label"></label>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Data.Remark" class="form-control" />
                <label asp-for="Data.Remark" class="form-label"></label>
                <span asp-validation-for="Data.Remark" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <a class="w-30 btn btn-lg btn-secondary" asp-page="Index" asp-route-ProjectDesignId="@Model.Data.ProjectDesignId"><i class="bi bi-arrow-left-circle-fill"></i></a>
                <button id="edit-button" type="submit" class="w-70 btn btn-lg btn-primary"><i class="bi bi-floppy-fill"></i></button>
            </div>
        </form>
    </div>
</div>

@section Breadcrumb {
    <li class="breadcrumb-item">@Model.Data.ProjectInfoName</li>
    <li class="breadcrumb-item"><a asp-page="/Features/Project/Design/Index" asp-route-ProjectInfoId="@Model.Data.ProjectInfoId">@Model.Data.ProjectDesignName</a></li>
    <li class="breadcrumb-item"><a asp-page="/Features/Project/Component/Index" asp-route-ProjectDesignId="@Model.Data.ProjectDesignId">@SL["Components"]</a></li>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script type="text/javascript">
        function loadDatalist(propertyName, datalistId) {
            $.ajax({
                url: '?handler=FieldValues',
                type: 'GET',
                data: {
                    projectInfoId: '@Model.Data.ProjectInfoId',
                    propertyName: propertyName
                },
                success: function (data) {
                    let datalist = $(datalistId);
                    data.forEach(function (value) {
                        datalist.append('<option value="' + value + '"></option>');
                    });
                },
                error: function () {
                    console.log("Error retrieving " + propertyName);
                }
            });
        };

        $(document).ready(function () {
            loadDatalist('Proposal', '#proposals');
            loadDatalist('Account', '#accounts');
            loadDatalist('Organization', '#organizations');
            loadDatalist('OrganizationalUnit', '#orgunits');
            loadDatalist('Location', '#locations');
            loadDatalist('Environment', '#environments');
            loadDatalist('Group', '#groups');
            loadDatalist('Responsible', '#responsibles');

            var selectedSourceType = $('#sourceType').val();
            var platformId = '@Model.Data.PlatformInfoId';  // Assuming PlatformId is a property in your model
            var productId = '@Model.Data.PlatformProductId';    // Assuming ProductId is a property in your model

            // Function to load the platform options based on the current SourceType
            function loadPlatforms(selectedPlatformId = null) {
                $.ajax({
                    url: '?handler=platforms',
                    type: 'GET',
                    success: function (data) {
                        var platformSelect = $('#platforms');
                        platformSelect.empty().append('<option value="">@SL["Select a platform"]</option>');

                        $.each(data, function (index, platform) {
                            var selected = (selectedPlatformId && platform.id == selectedPlatformId) ? 'selected' : '';
                            platformSelect.append('<option value="' + platform.id + '" ' + selected + '>' + platform.name + '</option>');
                        });

                        if (selectedPlatformId) {
                            $('#platformSection').show();  // Show platform section if a platform is pre-selected
                        }

                        console.log('Platforms loaded successfully.');
                    },
                    error: function () {
                        console.error('Failed to load platforms.');
                    }
                });
            }

            // Function to load the product options based on the selected platform
            function loadProducts(platformInfoId, selectedProductId = null) {
                $.ajax({
                    url: '?handler=products',
                    type: 'GET',
                    data: {
                        platformInfoId: platformInfoId
                    },
                    success: function (data) {
                        var productSelect = $('#products');
                        productSelect.empty().append('<option value="">@SL["Select a product"]</option>');

                        $.each(data, function (index, product) {
                            var selected = (selectedProductId && product.id == selectedProductId) ? 'selected' : '';
                            productSelect.append('<option value="' + product.id + '" ' + selected + '>' + product.label + '</option>');
                        });

                        if (selectedProductId) {
                            $('#productSection').show();  // Show product section if a product is pre-selected
                        }

                        console.log('Products loaded successfully.');
                    },
                    error: function () {
                        console.error('Failed to load products.');
                    }
                });
            }

            // Handle sourceType dropdown change
            $('#sourceType').change(function () {
                selectedSourceType = $(this).val();
                console.log('Selected SourceType:', selectedSourceType);

                //if (selectedSourceType === "Platform") {
                if (selectedSourceType === "2") {
                    $('#platformSection').show();
                    loadPlatforms();  // Load platforms if "Platform" is selected
                } else {
                    $('#platformSection').hide();
                    $('#productSection').hide();
                }
            });

            // Handle platform dropdown change
            $('#platforms').change(function () {
                platformId = $(this).val();
                console.log('Selected Platform ID:', platformId);

                if (platformId) {
                    loadProducts(platformId);  // Load products if a platform is selected
                } else {
                    $('#productSection').hide();
                }
            });

            // Initial load based on the pre-selected SourceType, Platform, and Product
            //if (selectedSourceType === "Platform") {
            if (selectedSourceType === "2") {
                $('#platformSection').show();
                $('#productSection').show();
                loadPlatforms(platformId);  // Load platforms with the pre-selected platform
            }

            if (platformId) {
                loadProducts(platformId, productId);  // Load products with the pre-selected product
            }
        });

    </script>
}