# version: '3.9'

secrets:
  PLATFORM_USERNAME:
    external: true
  PLATFORM_PASSWORD:
    external: true

# configs:
# volumes:

networks:
  lan-platform:
    external: true

services:

  minio:
    image: minio/minio
    volumes:
      - ${APP_DATA}:/data
    networks:
      - lan-${WORKSPACE}
    secrets:
      - PLATFORM_USERNAME
      - PLATFORM_PASSWORD
    environment:
      DOMAIN_DEV: ${DOMAIN_DEV}
      ENVIRONMENT: ${ENVIRONMENT}
      MINIO_ROOT_USER_FILE: /run/secrets/PLATFORM_USERNAME
      MINIO_ROOT_PASSWORD_FILE: /run/secrets/PLATFORM_PASSWORD
      MINIO_PROMETHEUS_AUTH_TYPE: public
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "--silent", "--fail", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role==${DOCKER_WORKER}
          - node.labels.role==infra
        preferences:
          - spread: node.id
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 15s
        failure_action: rollback
        monitor: 30s
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
        failure_action: continue
        monitor: 30s
      labels:
        - traefik.enable=true
        # MinIO UI Service
        - traefik.http.services.minio-ui.loadbalancer.server.scheme=http
        - traefik.http.services.minio-ui.loadbalancer.server.port=9001
        - traefik.http.routers.minio-ui.rule=Host(`s3.${DOMAIN_DEV}`)
        - traefik.http.routers.minio-ui.entrypoints=websecure
        - traefik.http.routers.minio-ui.tls.certresolver=${TRAEFIK_RESOLVER}
        - traefik.http.routers.minio-ui.service=minio-ui
        - traefik.http.routers.minio-ui.middlewares=${TRAEFIK_MIDDLEWARES}
        # MinIO Data Service
        - traefik.http.services.minio-data.loadbalancer.server.scheme=http
        - traefik.http.services.minio-data.loadbalancer.server.port=9000
        - traefik.http.routers.minio-data.rule=HostRegexp(`{bucket:[a-zA-Z0-9-]+}.s3.${DOMAIN_DEV}`)
        - traefik.http.routers.minio-data.entrypoints=websecure
        - traefik.http.routers.minio-data.service=minio-data
        - traefik.http.routers.minio-data.tls.certresolver=${TRAEFIK_RESOLVER}

  minio-init:
    image: minio/mc
    volumes:
      - ${APP_PATH}/minio/conf/minio-init.sh:/etc/entrypoint.sh
    networks:
      - lan-${WORKSPACE}
    secrets:
      - PLATFORM_USERNAME
      - PLATFORM_PASSWORD
    environment:
      MINIO_ROOT_USER_FILE: /run/secrets/PLATFORM_USERNAME
      MINIO_ROOT_PASSWORD_FILE: /run/secrets/PLATFORM_PASSWORD
    entrypoint: /bin/sh "/etc/entrypoint.sh"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role==${DOCKER_WORKER}
          - node.labels.role==infra
        preferences:
          - spread: node.id
      restart_policy:
        condition: none # Ensure this runs only once
      labels:
        - traefik.enable=false
