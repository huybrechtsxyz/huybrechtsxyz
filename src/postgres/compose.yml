# version: '3.9'

secrets:
  PLATFORM_USERNAME:
    external: true
  PLATFORM_PASSWORD:
    external: true

# configs:
# volumes:

networks:
  lan-develop:
    external: true
  lan-platform:
    external: true

services:

  postgres:
    image: postgres
    volumes:
      - ${APP_PATH}/postgres/data:/var/lib/postgresql/data/pgdata
    networks:
      - lan-${WORKSPACE}
    secrets:
      - PLATFORM_PASSWORD
    environment:
      ENVIRONMENT: ${ENVIRONMENT}
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: xyzdb
      POSTGRES_USER: root
      POSTGRES_PASSWORD_FILE: /run/secrets/PLATFORM_PASSWORD
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d xyzdb -U root"]
      interval: 60s
      timeout: 15s
      retries: 5
      start_period: 120s
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role==${DOCKER_WORKER}
          - node.labels.infra==true
          - node.labels.postgres==true
      restart_policy:
        condition: on-failure
        delay: 10s
        # max_attempts: 5
        # window: 60s
      update_config:
        parallelism: 1
        delay: 15s
        failure_action: rollback
        monitor: 30s
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
        failure_action: continue
        monitor: 30s
      labels:
        - traefik.enable=false

  postgres-init:
    image: postgres
    volumes:
      - ${APP_PATH}/postgres/conf/postgres-entry.sh:/usr/local/bin/entrypoint.sh:ro
      - ${APP_PATH}/postgres/conf/postgres-init.sql:/usr/local/bin/postgres-init.sql:ro
    networks:
      - lan-${WORKSPACE}
    secrets:
      - PLATFORM_PASSWORD
    environment:
      POSTGRES_DB: xyzdb
      POSTGRES_URL: postgres
      POSTGRES_USER: root
      POSTGRES_PASSWORD_FILE: /run/secrets/PLATFORM_PASSWORD
    entrypoint: /usr/local/bin/entrypoint.sh
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role==${DOCKER_WORKER}
          - node.labels.infra==true
          - node.labels.postgres==true
      restart_policy:
        condition: none # Ensure this runs only once
      labels:
        - traefik.enable=false

  pgadmin:
    image: dpage/pgadmin4
    volumes:
      - ${APP_PATH}/postgres/admin:/var/lib/pgadmin
    networks:
      - lan-${WORKSPACE}
    secrets:
      - PLATFORM_PASSWORD
    environment:
      DOMAIN_DEV: ${DOMAIN_DEV}
      ENVIRONMENT: ${ENVIRONMENT}
      PGADMIN_LISTEN_PORT: 9080
      PGADMIN_DEFAULT_EMAIL: ${PLATFORM_EMAIL}
      PGADMIN_DEFAULT_PASSWORD_FILE: /run/secrets/PLATFORM_PASSWORD
      SCRIPT_NAME: /pgadmin
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:9080/pgadmin"]
      interval: 60s
      timeout: 15s
      retries: 5
      start_period: 120s
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role==${DOCKER_WORKER}
          - node.labels.infra==true
          - node.labels.postgres==true
        preferences:
          - spread: node.id
      restart_policy:
        condition: on-failure
        delay: 10s
        # max_attempts: 5
        # window: 60s
      update_config:
        parallelism: 1
        delay: 15s
        failure_action: rollback
        monitor: 30s
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
        failure_action: continue
        monitor: 30s
      labels:
        - traefik.enable=true
        - traefik.http.services.pgadmin.loadbalancer.server.scheme=http
        - traefik.http.services.pgadmin.loadbalancer.server.port=9080
        - traefik.http.routers.pgadmin.rule=Host(`db.${DOMAIN_DEV}`) && PathPrefix(`/pgadmin`)
        - traefik.http.routers.pgadmin.entrypoints=websecure
        - traefik.http.routers.pgadmin.tls.certresolver=${TRAEFIK_TLS_DNS}
        - traefik.http.routers.pgadmin.middlewares=${TRAEFIK_MIDDLEWARES}
