# Docker Compose for the development environment
version: '3.9'

networks:

  traefik:
    external: true

services:

  consul:
    image: consul:1.15.4
    environment:
      - CONSUL_BIND_INTERFACE=eth0
    command: agent -server -bootstrap -ui -client 0.0.0.0
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    networks:
      - traefik
    volumes:
      - ../.app/data/consul:/consul/data
      - ../.app/data/consul.traefik.json:/consul/config/traefik.json
      - ../.app/data/consul.postgres.json:/consul/config/postgres.json
      - ../.app/data/consul.pgadmin.json:/consul/config/pgadmin.json
      - ../.app/data/consul.minio.json:/consul/config/minio.json
      - ../.app/data/consul.mkdocs.json:/consul/config/mkdocs.json
      - ../.app/data/consul.elastic.json:/consul/config/elastic.json
      - ../.app/data/consul.logstash.json:/consul/config/logstash.json
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8500/v1/status/leader"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    labels:
      - "traefik.enable=true"
      - "traefik.tags=develop"
      - "traefik.http.routers.consul.rule=Host(`config.localhost`)"
      - "traefik.http.routers.consul.entrypoints=web"
      - "traefik.http.services.consul.loadbalancer.server.port=8500"

  traefik:
    image: "traefik:v3.1.6"
    depends_on:
      - consul
      - pgadmin
    command:
      # Logging levels are DEBUG, PANIC, FATAL, ERROR, WARN, and INFO.
      # Enable the Traefik log, for configurations and errors
      - --log=true
      - --log.level=DEBUG
      - --log.format=json
      - --log.maxsize=5
      - --log.maxage=5
      - --log.filePath=/app/logs/traefik.log
      # Checking the Health of Your Traefik Instances
      - --ping=true
      # Enable the access log, with HTTP requests
      - --accesslog=true
      - --accesslog.format=json
      - --accesslog.filepath=/app/logs/traefik-access.log
      # Prometheus metrics
      - --metrics.prometheus=true
      - --metrics.prometheus.addEntryPointsLabels=true
      - --metrics.prometheus.addRoutersLabels=true
      - --metrics.prometheus.addServicesLabels=true
      # Consul configuration
      - --providers.consulCatalog=true
      - --providers.consulCatalog.cache=true
      - --providers.consulCatalog.refreshInterval=30s
      - --providers.consulCatalog.endpoint.address=http://consul:8500
      - --providers.consulCatalog.endpoint.scheme=http
      - --providers.consulCatalog.exposedByDefault=false
      - --providers.consulCatalog.defaultRule=Host(`config.localhost`)
      # Entry points
      - --entrypoints.web.address=:80
      # Specifies the number of concurrent streams per connection that each client is allowed to initiate for http/2
      # Docker configuration
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=traefik
      # Dashboard. Optional. Default: true. 
      - --api
      - --api.dashboard=true
    ports:
      - "80:80"
      - "443:443"
    networks:
      - traefik
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "../.app/cert:/app/cert"
      - "../.app/logs:/app/logs"
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    labels:
      # Enable for test
      - "traefik.enable=true"
      - "traefik.tags=develop"
      # Dashboard
      - "traefik.http.routers.traefik.rule=Host(`proxy.localhost`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  postgres:
    image: postgres
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: xyzdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    networks:
      - traefik
    volumes:
      - ../.app/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d xyzdb -U admin"]
      interval: 1s
      timeout: 5s
      retries: 10
      start_period: 5s

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_LISTEN_PORT: 8080
      PGADMIN_DEFAULT_EMAIL: webmaster@huybrechts.xyz
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - "8080:8080"
    networks:
      - traefik
    volumes:
      - ../.app/data/pgadmin:/var/lib/pgadmin
    healthcheck:
      test: ["CMD", "curl", "-f", "http://pgadmin.localhost:8080/"]
      interval: 10s
      timeout: 5s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.tags=develop"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.localhost`)"
      - "traefik.http.routers.pgadmin.entrypoints=web"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=8080"
      - "traefik.http.services.pgadmin.loadbalancer.server.scheme=http"

  minio:
    image: minio/minio
    environment:
      - MINIO_ROOT_USER=root
      - MINIO_ROOT_PASSWORD=password
    command: server /data --console-address ":9001"
    ports:
      - "9001:9001"
    volumes:
      - ../.app/data/minio:/data
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.tags=develop"
      - "traefik.http.routers.minio.rule=Host(`data.localhost`)"
      - "traefik.http.services.minio.loadbalancer.server.port=9001"
      - "traefik.http.routers.minio.entrypoints=web"

  mkdocs:
    image: squidfunk/mkdocs-material
    command: serve -a 0.0.0.0:8000 -v  # Serve on all interfaces
    ports:
      - "8000:8000"
    volumes:
      - "../.app:/docs"
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.tags=develop"
      - "traefik.http.routers.mkdocs.rule=Host(`docs.localhost`)"
      - "traefik.http.services.mkdocs.loadbalancer.server.port=8000"
      - "traefik.http.routers.mkdocs.entrypoints=web"

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.3
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.license.self_generated.type=basic
      - xpack.security.enabled=false
      - xpack.monitoring.collection.enabled=true
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ../.app/data/elastic:/usr/share/elasticsearch/data
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.tags=develop"
      - "traefik.http.routers.elastic.rule=Host(`elastic.localhost`)"
      - "traefik.http.services.elastic.loadbalancer.server.port=9200"
      - "traefik.http.routers.elastic.entrypoints=web"

  logstash:
    image: docker.elastic.co/logstash/logstash:8.15.3
    environment:
      - "LS_JAVA_OPTS=-Xmx256m -Xms256m"
      - xpack.monitoring.enabled=true
    ports:
      - "9500:9500"
    networks:
      - traefik
    volumes:
      - ../.app/data/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    labels:
      - "traefik.enable=true"
      - "traefik.tags=develop"
      - "traefik.http.routers.logstash.rule=Host(`elastic.localhost`)"
      - "traefik.http.services.logstash.loadbalancer.server.port=9500"
      - "traefik.http.routers.logstash.entrypoints=web"
