# Docker Compose for the test environment
#
# Environment Variables
# =======================================
# DOCKER_SWARM_MANAGERS
# VERSIO_USERNAME
# VERSIO_PASSWORD
# VERSIO_ENDPOINT
# =======================================
#
version: '3.9'

services:

  consul:
    image: consul:1.15.4    
    environment:
      SWARM_MANAGERS: ${SWARM_MANAGERS}
    command:
      - consul
      - agent
      - -data-dir=/consul/data
      - -config-dir=/consul/config
      - -config-file=/consul/config/consul.test.json
      - -bootstrap-expect=${SWARM_MANAGERS}
    networks:
      - public
    volumes:
      - consul-conf:/consul/config
      - consul-data:/consul/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8500/v1/status/leader"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 5s
    deploy:
      replicas: ${DOCKER_SWARM_MANAGERS}
      placement:
        constraints: 
          - node.role == manager
        preferences:
          - spread: node.id
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
        window: 60s
      update_config:
        parallelism: 1
        delay: 15s
        failure_action: rollback
        monitor: 30s
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
        failure_action: continue
        monitor: 30s
      # resources:
      #   limits:
      #     cpus: "2.0"     # Max 2 CPUs
      #     memory: "2G"    # Max 2GB of memory
      #   reservations:
      #     cpus: "0.5"     # Reserve 0.5 CPUs
      #     memory: "512M"  # Reserve 512MB of memory

  traefik:
    image: "traefik:v3.1.6"
    secrets:
      - VERSIO_USERNAME
      - VERSIO_PASSWORD
      - VERSIO_ENDPOINT
    environment:
      VERSIO_USERNAME_FILE: /run/secrets/VERSIO_USERNAME
      VERSIO_PASSWORD_FILE: /run/secrets/VERSIO_PASSWORD
      VERSIO_ENDPOINT_FILE: /run/secrets/VERSIO_ENDPOINT
    ports:
      - "80:80"
      - "443:443"
    networks:
      - public
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-conf/traefik.test.yml:/etc/traefik/traefik.yml:ro
      - traefik-data:/app/data
      - traefik-logs:/app/logs
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      replicas: 1
      placement:
        constraints: 
          - node.role == manager
        preferences:
          - spread: node.id
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
        window: 60s
      update_config:
        parallelism: 1
        delay: 15s
        failure_action: rollback
        monitor: 30s
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
        failure_action: continue
        monitor: 30s
      # resources:
      #   limits:
      #     cpus: "1.0"     # Max 1 CPUs
      #     memory: "512M"  # Max 512Mb of memory
      #   reservations:
      #     cpus: "0.25"    # Reserve 0.25 CPUs
      #     memory: "512M"  # Reserve 512MB of memory

  minio:
    image: "minio/minio:latest"
    secrets:
      - MINIO_ROOT_USER
      - MINIO_ROOT_PASSWORD
      - MINIO_REGION
    environment:
      MINIO_ROOT_USER_FILE: /run/secrets/MINIO_ROOT_USER
      MINIO_ROOT_PASSWORD_FILE: /run/secrets/MINIO_ROOT_PASSWORD
      MINIO_REGION_FILE: /run/secrets/MINIO_REGION
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"  # MinIO API
      - "9001:9001"  # MinIO Console
    networks:
      - public
    volumes:
      - minio-dat:/data
    healthcheck:
      test: ["CMD", "curl", "--silent", "--fail", "http://localhost:9000/minio/health/live"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      # resources:
      #   limits:
      #     cpus: "1.5"
      #     memory: "3G"
      #   reservations:
      #     cpus: "1.0"
      #     memory: "2G"

volumes:

  consul-conf:
    driver: local
    driver_opts:
      type: none
      device: /app/consul/conf
      o: bind
  consul-data:
    driver: local
    driver_opts:
      type: none
      device: /app/consul/data
      o: bind

  traefik-conf:
    driver: local
    driver_opts:
      type: none
      device: /app/traefik/conf
      o: bind
  traefik-data:
    driver: local
    driver_opts:
      type: none
      device: /app/traefik/data
      o: bind
  traefik-logs:
    driver: local
    driver_opts:
      type: none
      device: /app/traefik/logs
      o: bind

  minio-data:
    driver: local
    driver_opts:
      type: none
      device: /mnt/data
      o: bind

networks:
  public:
    external: true
  private:
    external: true

secrets:
  VERSIO_USERNAME:
    external: true
  VERSIO_PASSWORD:
    external: true
  VERSIO_ENDPOINT:
    external: true

  MINIO_ROOT_USER:
    external: true
  MINIO_ROOT_PASSWORD:
    external: true
  MINIO_REGION:
    external: true

#configs:
